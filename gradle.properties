## For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html
#
# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx1024m -XX:MaxPermSize=256m
# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
#
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
org.gradle.parallel=true
org.gradle.jvmargs=-Xmx4096m
#Sat Sep 02 12:19:06 CST 2023
android.enableJetifier=true
android.nonFinalResIds=false
android.nonTransitiveRClass=false
android.useAndroidX=true

NDK_VERSION=25.2.9519653

# =============================================================================
# --- MAVEN CENTRAL PUBLISHING PROPERTIES ---
# =============================================================================

# --- Project Information ---
# You can change the version here. Use -SNAPSHOT for development versions.
VERSION_NAME=androidx-8.4.4
GROUP_ID=com.gouqinglin
ARTIFACT_ID=BigImageViewPager

# --- POM Metadata ---
POM_DESCRIPTION=An Android library for viewing large images and videos with gesture support, including features like zooming, panning, and progress display.
POM_URL=https://github.com/SherlockGougou/BigImageViewPager
POM_SCM_URL=https://github.com/SherlockGougou/BigImageViewPager.git
POM_SCM_CONNECTION=scm:git:github.com/SherlockGougou/BigImageViewPager.git
POM_SCM_DEV_CONNECTION=scm:git:ssh://github.com/SherlockGougou/BigImageViewPager.git

# --- License Information ---
POM_LICENSE_NAME=The Apache License, Version 2.0
POM_LICENSE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt
POM_LICENSE_DIST=repo

# --- Developer Information ---
POM_DEVELOPER_ID=SherlockGougou
POM_DEVELOPER_NAME=SherlockGougou
POM_DEVELOPER_EMAIL=qinglingou@gmail.com

# --- Sonatype OSSRH Credentials ---
# *** IMPORTANT ***
# You need to create an account on Sonatype JIRA to get these credentials.
# https://central.sonatype.org/publish/publish-guide/#initial-setup
ossrhUsername=
ossrhPassword=

# --- GPG Signing Credentials ---
# *** IMPORTANT ***
# You need to generate a GPG key to sign your artifacts.
# On macOS, you can use `brew install gpg` and then `gpg --gen-key`.
# Use `gpg --list-secret-keys` to find your key ID (the 8-digit hex string).
# The keyId is the last 8 characters of the sec key.
signing.keyId=
signing.password=
# The secret key ring file. For gpg 2.1+, you may need to export it first:
# gpg --export-secret-keys > ~/.gnupg/secring.gpg
# You can provide an absolute path to your secret key ring file.
signing.secretKeyRingFile=/Users/kirito/.gnupg/secring.gpg